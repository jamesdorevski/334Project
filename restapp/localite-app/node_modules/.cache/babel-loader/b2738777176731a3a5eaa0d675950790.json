{"ast":null,"code":"var _jsxFileName = \"/Users/brittchin/Desktop/334Project/restapp/localite-app/src/components/LoginComponent.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport AccountService from \"../api/AccountService\"; //https://jasonwatmore.com/post/2020/04/22/react-email-sign-up-with-verification-authentication-forgot-password\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      success: false,\n      loading: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email('Email is invalid').required('Email is required'),\n        password: Yup.string().required('Password is required')\n      }),\n      onSubmit: ({\n        fields\n      }, {\n        setSubmitting\n      }) => {\n        //   AccountService.loginUser(\n        //     fields.email,\n        //     fields.password\n        //   ).then((response) => {\n        //       console.log(response)\n        //     if (response.data) {\n        //         this.props.history.push(\"/login\")\n        //     } else {\n        //         this.setState({\n        //             message: \"Unable to log in: Incorrect email or password.\",\n        //             success: false\n        //         })\n        //     }\n        //   });\n        AccountService.loginUser().then(response => {\n          console.log(response);\n        }, error => {\n          setSubmitting(false);\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, ({\n      errors,\n      touched,\n      isSubmitting\n    }) => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"email\",\n      type: \"text\",\n      className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"password\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, isSubmitting && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"spinner-border spinner-border-sm mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 50\n      }\n    }), \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"forgot-password\",\n      className: \"btn btn-link pr-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, \"Forgot Password?\"))), this.state.message && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, this.state.message)))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/brittchin/Desktop/334Project/restapp/localite-app/src/components/LoginComponent.jsx"],"names":["React","Component","Link","Formik","Field","Form","ErrorMessage","Yup","AccountService","Login","constructor","props","state","message","success","loading","render","email","password","object","shape","string","required","fields","setSubmitting","loginUser","then","response","console","log","error","resMessage","data","toString","setState","errors","touched","isSubmitting"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { Link } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport AccountService from \"../api/AccountService\"\n\n//https://jasonwatmore.com/post/2020/04/22/react-email-sign-up-with-verification-authentication-forgot-password\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        message: \"\",\n        success: false,\n        loading: false\n      };\n  }\n  \n  render() {\n    return (\n        <Formik\n        initialValues={{\n            email: \"\",\n            password: \"\",\n          }}\n          validationSchema={\n            Yup.object().shape({\n                email: Yup.string()\n                    .email('Email is invalid')\n                    .required('Email is required'),\n                password: Yup.string().required('Password is required')\n            })}\n\n          onSubmit={({ fields }, { setSubmitting }) => {\n        //   AccountService.loginUser(\n        //     fields.email,\n        //     fields.password\n        //   ).then((response) => {\n        //       console.log(response)\n        //     if (response.data) {\n        //         this.props.history.push(\"/login\")\n        //     } else {\n        //         this.setState({\n        //             message: \"Unable to log in: Incorrect email or password.\",\n        //             success: false\n        //         })\n        //     }\n        //   });\n        AccountService.loginUser().then(response => {\n            console.log(response)\n          },\n          error => {\n            setSubmitting(false)\n\n            const resMessage =\n              (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n              error.message ||\n              error.toString();\n  \n            this.setState({\n              loading: false,\n              message: resMessage\n            });\n          }\n        );\n        }}\n          >\n        {({ errors, touched, isSubmitting }) => (\n            <Form>\n                <h3 className=\"card-header\">Login</h3>\n                <div className=\"card-body\">\n                    <div className=\"form-group\">\n                        <label>Email</label>\n                        <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                        <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                        <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col\">\n                            <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary\">\n                                {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\n                                Login\n                            </button>\n                        </div>\n                        <div className=\"form-group col text-right\">\n                            <Link to=\"forgot-password\" className=\"btn btn-link pr-0\">Forgot Password?</Link>\n                        </div>\n                    </div>\n                    {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n                </div>\n            </Form>\n        )}\n    </Formik>\n    );\n  }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}