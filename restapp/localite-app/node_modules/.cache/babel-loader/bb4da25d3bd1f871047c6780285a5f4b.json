{"ast":null,"code":"var _jsxFileName = \"/Users/brittchin/Desktop/334Project/restapp/localite-app/src/components/LoginComponent.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport AccountService from \"../api/AccountService\"; //LINKS USED\n//https://bezkoder.com/react-jwt-auth/\n//https://jasonwatmore.com/post/2020/04/22/react-email-sign-up-with-verification-authentication-forgot-password\n//currently a seperate component - will be a modal popup once it works\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      loading: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n        password: Yup.string().required(\"Password is required\")\n      }),\n      onSubmit: ({\n        email,\n        password\n      }, {\n        setSubmitting\n      }) => {\n        AccountService.loginUser(email, password).then(response => {\n          console.log(response);\n\n          if (response.data.success) {\n            this.props.history.push(\"/login\");\n          } else {\n            setSubmitting(false);\n            this.setState({\n              loading: false,\n              message: \"Unable to log in: \" + response.data.message\n            });\n          }\n        }, error => {\n          setSubmitting(false);\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, ({\n      errors,\n      touched,\n      isSubmitting\n    }) => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"email\",\n      type: \"text\",\n      className: \"form-control\" + (errors.email && touched.email ? \" is-invalid\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      className: \"form-control\" + (errors.password && touched.password ? \" is-invalid\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"password\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, isSubmitting && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"spinner-border spinner-border-sm mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 23\n      }\n    }), \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"forgot-password\",\n      className: \"btn btn-link pr-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, \"Forgot Password?\"))), this.state.message && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, this.state.message)))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/brittchin/Desktop/334Project/restapp/localite-app/src/components/LoginComponent.jsx"],"names":["React","Component","Link","Formik","Field","Form","ErrorMessage","Yup","AccountService","Login","constructor","props","state","message","loading","render","email","password","object","shape","string","required","setSubmitting","loginUser","then","response","console","log","data","success","history","push","setState","error","resMessage","toString","errors","touched","isSubmitting"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport AccountService from \"../api/AccountService\";\n\n//LINKS USED\n//https://bezkoder.com/react-jwt-auth/\n//https://jasonwatmore.com/post/2020/04/22/react-email-sign-up-with-verification-authentication-forgot-password\n\n//currently a seperate component - will be a modal popup once it works\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: \"\",\n      loading: false,\n    };\n  }\n\n  render() {\n    return (\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        \n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email(\"Email is invalid\")\n            .required(\"Email is required\"),\n          password: Yup.string().required(\"Password is required\"),\n        })}\n        \n        onSubmit={({ email, password }, { setSubmitting }) => {\n          AccountService.loginUser(email, password).then(\n            (response) => {\n              console.log(response);\n              if (response.data.success) {\n                this.props.history.push(\"/login\");\n              } else {\n                setSubmitting(false);\n                this.setState({\n                  loading: false,\n                  message: \"Unable to log in: \" + response.data.message,\n                });\n              }\n            },\n            (error) => {\n              setSubmitting(false);\n\n              const resMessage =\n                (error.response &&\n                  error.response.data &&\n                  error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n              this.setState({\n                loading: false,\n                message: resMessage,\n              });\n            }\n          );\n        }}\n      >\n        {({ errors, touched, isSubmitting }) => (\n          <Form>\n            <h3 className=\"card-header\">Login</h3>\n            <div className=\"card-body\">\n              <div className=\"form-group\">\n                <label>Email</label>\n                <Field\n                  name=\"email\"\n                  type=\"text\"\n                  className={\n                    \"form-control\" +\n                    (errors.email && touched.email ? \" is-invalid\" : \"\")\n                  }\n                />\n                <ErrorMessage\n                  name=\"email\"\n                  component=\"div\"\n                  className=\"invalid-feedback\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Password</label>\n                <Field\n                  name=\"password\"\n                  type=\"password\"\n                  className={\n                    \"form-control\" +\n                    (errors.password && touched.password ? \" is-invalid\" : \"\")\n                  }\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  className=\"invalid-feedback\"\n                />\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-group col\">\n                  <button\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                    className=\"btn btn-primary\"\n                  >\n                    {isSubmitting && (\n                      <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n                    )}\n                    Login\n                  </button>\n                </div>\n                <div className=\"form-group col text-right\">\n                  <Link to=\"forgot-password\" className=\"btn btn-link pr-0\">\n                    Forgot Password?\n                  </Link>\n                </div>\n              </div>\n              {this.state.message && (\n                <div className=\"form-group\">\n                  <div className=\"alert alert-danger\" role=\"alert\">\n                    {this.state.message}\n                  </div>\n                </div>\n              )}\n            </div>\n          </Form>\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}