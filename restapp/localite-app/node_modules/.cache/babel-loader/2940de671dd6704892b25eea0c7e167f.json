{"ast":null,"code":"var _jsxFileName = \"/Users/brittchin/Desktop/334Project/restapp/localite-app/src/components/SignUpComponent.jsx\";\nimport React, { Component } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport AuthService from \"../api/AuthService\";\n\nclass SignUpComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      success: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      validationSchema: Yup.object().shape({\n        firstName: Yup.string().required(\"First Name is required\"),\n        lastName: Yup.string().required(\"Last Name is required\"),\n        email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n        password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n        confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\")\n      }),\n      onSubmit: fields => {\n        // alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\n        // find a way to pass fields as an object so we can extract the params in AuthService\n        AuthService.createAccount(fields.firstName, fields.lastName, fields.email, fields.password).then(response => {\n          console.log(response);\n\n          if (response.data.success) {\n            this.setState({\n              message: response.data.message,\n              success: true\n            });\n          } else {\n            this.setState({\n              success: false,\n              message: \"Unable to create account: \" + response.data.message\n            });\n          }\n        }, error => {\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          this.setState({\n            success: false,\n            message: resMessage\n          });\n        });\n      },\n      render: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, \"First Name\"), /*#__PURE__*/React.createElement(Field, {\n        name: \"firstName\",\n        type: \"text\",\n        className: \"form-control\" + (errors.firstName && touched.firstName ? \" is-invalid\" : \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"firstName\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, \"Last Name\"), /*#__PURE__*/React.createElement(Field, {\n        name: \"lastName\",\n        type: \"text\",\n        className: \"form-control\" + (errors.lastName && touched.lastName ? \" is-invalid\" : \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"lastName\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n        name: \"email\",\n        type: \"text\",\n        className: \"form-control\" + (errors.email && touched.email ? \" is-invalid\" : \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Field, {\n        name: \"password\",\n        type: \"password\",\n        className: \"form-control\" + (errors.password && touched.password ? \" is-invalid\" : \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"password\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"confirmPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Field, {\n        name: \"confirmPassword\",\n        type: \"password\",\n        className: \"form-control\" + (errors.confirmPassword && touched.confirmPassword ? \" is-invalid\" : \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"confirmPassword\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }\n      }, \"Register\")), this.state.message && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.success ? \"alert alert-success\" : \"alert alert-danger\",\n        role: \"alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }, this.state.message)), this.state.message && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 19\n        }\n      }, this.state.message))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default SignUpComponent;","map":{"version":3,"sources":["/Users/brittchin/Desktop/334Project/restapp/localite-app/src/components/SignUpComponent.jsx"],"names":["React","Component","Formik","Field","Form","ErrorMessage","Yup","AuthService","SignUpComponent","constructor","props","state","message","success","render","firstName","lastName","email","password","confirmPassword","object","shape","string","required","min","oneOf","ref","fields","createAccount","then","response","console","log","data","setState","error","resMessage","toString","errors","touched"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport AuthService from \"../api/AuthService\";\n\nclass SignUpComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: \"\",\n      success: false,\n    };\n  }\n\n  render() {\n    return (\n      <Formik\n        initialValues={{\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n        }}\n        validationSchema={Yup.object().shape({\n          firstName: Yup.string().required(\"First Name is required\"),\n          lastName: Yup.string().required(\"Last Name is required\"),\n          email: Yup.string()\n            .email(\"Email is invalid\")\n            .required(\"Email is required\"),\n          password: Yup.string()\n            .min(6, \"Password must be at least 6 characters\")\n            .required(\"Password is required\"),\n          confirmPassword: Yup.string()\n            .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n            .required(\"Confirm Password is required\"),\n        })}\n        onSubmit={(fields) => {\n          // alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\n          // find a way to pass fields as an object so we can extract the params in AuthService\n          AuthService.createAccount(\n            fields.firstName,\n            fields.lastName,\n            fields.email,\n            fields.password).then(\n              (response) => {\n                console.log(response);\n                if (response.data.success) {\n                  this.setState({\n                          message: response.data.message,\n                          success: true,\n                  })\n                } else {\n                  \n                  this.setState({\n                    success: false,\n                    message: \"Unable to create account: \" + response.data.message,\n                  });\n                }\n              },\n              (error) => {\n  \n                const resMessage =\n                  (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                  error.message ||\n                  error.toString();\n  \n                this.setState({\n                  success: false,\n                  message: resMessage,\n                });\n              }\n            );\n        }}\n        \n        render={({ errors, touched }) => (\n          <Form>\n            <div className=\"form-group\">\n              <label htmlFor=\"firstName\">First Name</label>\n              <Field\n                name=\"firstName\"\n                type=\"text\"\n                className={\n                  \"form-control\" +\n                  (errors.firstName && touched.firstName ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"firstName\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"lastName\">Last Name</label>\n              <Field\n                name=\"lastName\"\n                type=\"text\"\n                className={\n                  \"form-control\" +\n                  (errors.lastName && touched.lastName ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"lastName\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <Field\n                name=\"email\"\n                type=\"text\"\n                className={\n                  \"form-control\" +\n                  (errors.email && touched.email ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Field\n                name=\"password\"\n                type=\"password\"\n                className={\n                  \"form-control\" +\n                  (errors.password && touched.password ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"confirmPassword\">Confirm Password</label>\n              <Field\n                name=\"confirmPassword\"\n                type=\"password\"\n                className={\n                  \"form-control\" +\n                  (errors.confirmPassword && touched.confirmPassword\n                    ? \" is-invalid\"\n                    : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"confirmPassword\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                Register\n              </button>\n            </div>\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.success\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            {this.state.message && (\n                <div className=\"form-group\">\n                  <div className=\"alert alert-danger\" role=\"alert\">\n                    {this.state.message}\n                  </div>\n                </div>\n              )}\n          </Form>\n        )}\n      />\n    );\n  }\n}\n\nexport default SignUpComponent;\n"]},"metadata":{},"sourceType":"module"}